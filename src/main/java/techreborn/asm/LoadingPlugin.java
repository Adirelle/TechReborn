package techreborn.asm;

import com.google.common.eventbus.EventBus;
import com.google.common.eventbus.Subscribe;
import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.LoadController;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.discovery.ASMDataTable;
import cpw.mods.fml.common.event.FMLConstructionEvent;
import cpw.mods.fml.relauncher.IFMLCallHook;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;
import techreborn.lib.ModInfo;

import java.util.Map;

@IFMLLoadingPlugin.MCVersion( "1.7.10" )
public class LoadingPlugin implements IFMLLoadingPlugin {

	public static ASMDataTable ASM_DATA = null;
	public static boolean runtimeDeobfEnabled = false;

	@Override
	public String[] getASMTransformerClass() {
		return new String[]{"techreborn.asm.ClassTransformation"};
	}

	@Override
	public String getModContainerClass() {
		return DummyMod.class.getName();
	}

	@Override
	public String getSetupClass() {
		return DummyMod.class.getName();
	}

	@Override
	public void injectData(Map<String, Object> data) {
		runtimeDeobfEnabled = (Boolean) data.get("runtimeDeobfuscationEnabled");
	}

	@Override
	public String getAccessTransformerClass() {
		return null;
	}

	public static class DummyMod extends DummyModContainer implements IFMLCallHook {

		public DummyMod() {

			super(new ModMetadata());
			ModMetadata md = getMetadata();
			md.autogenerated = true;
			md.modId = ModInfo.MOD_ID + "asm";
			md.name = md.description = "Techreborn-Stripper";
			md.parent = ModInfo.MOD_ID;
			md.version = "000";
		}

		@Override
		public boolean registerBus(EventBus bus, LoadController controller) {

			bus.register(this);
			return true;
		}

		@Subscribe
		public void construction(FMLConstructionEvent evt) {
		}

		@Override
		public Void call() throws Exception {

			return null;
		}

		@Override
		public void injectData(Map<String, Object> data) {

		}
	}
}
